<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Math on A weblog of sorts</title>
    <link>http://localhost:1313/categories/math/</link>
    <description>Recent content in Math on A weblog of sorts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 17 Sep 2015 12:44:32 +0530</lastBuildDate>
    
	<atom:link href="http://localhost:1313/categories/math/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Getting into Sage - a practical guide</title>
      <link>http://localhost:1313/blog/getting-into-sage---a-practical-guide/</link>
      <pubDate>Thu, 17 Sep 2015 12:44:32 +0530</pubDate>
      
      <guid>http://localhost:1313/blog/getting-into-sage---a-practical-guide/</guid>
      <description>I&amp;rsquo;ve been playing around with group theory and graph theory for a while now, so I thought that it was high-time to install [SAGE](), a Python based environment for math computation.
Unfortunately, the documentation for SAGE is very fragmented, so the experience of getting it up and running wasn&amp;rsquo;t particularly enjoyable. However, once you do get it up and running, it&amp;rsquo;s really slick to use.
It&amp;rsquo;s for this reason that I&amp;rsquo;ve decided that this will be a living document consisting of all SAGE usage and information that I find out.</description>
    </item>
    
    <item>
      <title>Math Rambling - Dirac Delta derivative</title>
      <link>http://localhost:1313/blog/math-rambling---dirac-delta-derivative/</link>
      <pubDate>Fri, 17 Jul 2015 20:19:14 +0530</pubDate>
      
      <guid>http://localhost:1313/blog/math-rambling---dirac-delta-derivative/</guid>
      <description>code.has-jax {font: inherit; font-size: 0.9em; background: inherit; border: inherit; color: #   MathJax.Hub.Config({ tex2jax: { inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]], displayMath: [[&#39;$$&#39;,&#39;$$&#39;]], scale: 10, minScaleAdjust: 10, processEscapes: true, processEnvironments: true, skipTags: [&#39;script&#39;, &#39;noscript&#39;, &#39;style&#39;, &#39;textarea&#39;, &#39;pre&#39;], TeX: { equationNumbers: { autoNumber: &#34;AMS&#34; }, extensions: [&#34;AMSmath.js&#34;, &#34;AMSsymbols.js&#34;] } } });  MathJax.Hub.Queue(function() { // Fix  tags after MathJax finishes running. This is a // hack to overcome a shortcoming of Markdown.</description>
    </item>
    
  </channel>
</rss>